// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restaurant.Data;

namespace Restaurant.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20191106133833_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Restuarant.Models.Dish", b =>
                {
                    b.Property<int>("DishId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DishName");

                    b.Property<int>("Price");

                    b.Property<string>("RestaurantAddress");

                    b.Property<int>("RestaurantId");

                    b.Property<string>("RestaurantName");

                    b.Property<string>("Type");

                    b.HasKey("DishId");

                    b.ToTable("Dish");
                });

            modelBuilder.Entity("Restuarant.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfVisit");

                    b.Property<string>("GuestName");

                    b.Property<int>("PersonId");

                    b.Property<int>("TableId");

                    b.HasKey("GuestId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.HasIndex("TableId");

                    b.ToTable("Guest");
                });

            modelBuilder.Entity("Restuarant.Models.GuestDish", b =>
                {
                    b.Property<int>("DishId");

                    b.Property<int>("GuestId");

                    b.HasKey("DishId", "GuestId");

                    b.HasIndex("GuestId");

                    b.ToTable("GuestDish");
                });

            modelBuilder.Entity("Restuarant.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("PersonId");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Restuarant.Models.RestaurantClass", b =>
                {
                    b.Property<int>("RestaurantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<double>("AverageRating");

                    b.Property<string>("Name");

                    b.Property<string>("Type");

                    b.HasKey("RestaurantId");

                    b.ToTable("Restaurant");
                });

            modelBuilder.Entity("Restuarant.Models.RestaurantDish", b =>
                {
                    b.Property<int>("DishId");

                    b.Property<int>("RestaurantId");

                    b.HasKey("DishId", "RestaurantId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("RestaurantDish");
                });

            modelBuilder.Entity("Restuarant.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfVisit");

                    b.Property<int>("DishId");

                    b.Property<string>("DishName");

                    b.Property<int>("GuestId");

                    b.Property<string>("RestaurantAddress");

                    b.Property<int>("RestaurantId");

                    b.Property<string>("RestaurantName");

                    b.Property<string>("ReviewerName");

                    b.Property<int>("Stars");

                    b.Property<string>("Text");

                    b.HasKey("ReviewId");

                    b.HasIndex("RestaurantId");

                    b.ToTable("Review");
                });

            modelBuilder.Entity("Restuarant.Models.ReviewDish", b =>
                {
                    b.Property<int>("DishId");

                    b.Property<int>("ReviewId");

                    b.HasKey("DishId", "ReviewId");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewDish");
                });

            modelBuilder.Entity("Restuarant.Models.ReviewGuest", b =>
                {
                    b.Property<int>("GuestId");

                    b.Property<int>("ReviewId");

                    b.HasKey("GuestId", "ReviewId");

                    b.HasIndex("ReviewId");

                    b.ToTable("ReviewGuest");
                });

            modelBuilder.Entity("Restuarant.Models.Table", b =>
                {
                    b.Property<int>("TableId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RestaurantAddress");

                    b.Property<int>("RestaurantId");

                    b.Property<string>("RestaurantName");

                    b.Property<int>("WaiterId");

                    b.Property<string>("WaiterName");

                    b.HasKey("TableId");

                    b.HasIndex("RestaurantId");

                    b.HasIndex("WaiterId");

                    b.ToTable("Table");
                });

            modelBuilder.Entity("Restuarant.Models.Waiter", b =>
                {
                    b.Property<int>("WaiterId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PersonId");

                    b.Property<int>("Salary");

                    b.Property<string>("WaiterName");

                    b.HasKey("WaiterId");

                    b.HasIndex("PersonId")
                        .IsUnique();

                    b.ToTable("Waiter");
                });

            modelBuilder.Entity("Restuarant.Models.Guest", b =>
                {
                    b.HasOne("Restuarant.Models.Person", "Person")
                        .WithOne("Guest")
                        .HasForeignKey("Restuarant.Models.Guest", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restuarant.Models.Table", "Table")
                        .WithMany("Guests")
                        .HasForeignKey("TableId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.GuestDish", b =>
                {
                    b.HasOne("Restuarant.Models.Dish", "Dish")
                        .WithMany("GuestDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restuarant.Models.Guest", "Guest")
                        .WithMany("GuestDishes")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.RestaurantDish", b =>
                {
                    b.HasOne("Restuarant.Models.Dish", "Dish")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restuarant.Models.RestaurantClass", "Restaurant")
                        .WithMany("RestaurantDishes")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.Review", b =>
                {
                    b.HasOne("Restuarant.Models.RestaurantClass", "Restaurant")
                        .WithMany("Reviews")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.ReviewDish", b =>
                {
                    b.HasOne("Restuarant.Models.Dish", "Dish")
                        .WithMany("ReviewDishes")
                        .HasForeignKey("DishId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restuarant.Models.Review", "Review")
                        .WithMany("ReviewDishes")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.ReviewGuest", b =>
                {
                    b.HasOne("Restuarant.Models.Guest", "Guest")
                        .WithMany("ReviewGuests")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restuarant.Models.Review", "Review")
                        .WithMany("ReviewGuests")
                        .HasForeignKey("ReviewId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.Table", b =>
                {
                    b.HasOne("Restuarant.Models.RestaurantClass", "Restaurant")
                        .WithMany("Tables")
                        .HasForeignKey("RestaurantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Restuarant.Models.Waiter", "Waiter")
                        .WithMany("Tables")
                        .HasForeignKey("WaiterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Restuarant.Models.Waiter", b =>
                {
                    b.HasOne("Restuarant.Models.Person", "Person")
                        .WithOne("Waiter")
                        .HasForeignKey("Restuarant.Models.Waiter", "PersonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
